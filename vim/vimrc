" Set up Pathogen plugin
call pathogen#infect()

if v:lang =~ "utf8$" || v:lang =~ "UTF-8$"
   set fileencodings=utf-8,latin1
endif

set tabpagemax=100
set ai                          " always set autoindenting on
set autoindent
set backup                      " keep a backup file
set backupdir=~/.vim-backup
set directory=~/.vim-temp
set bs=indent,eol,start         " allow backspacing over everything in insert mode
set cmdheight=1
set hidden
set history=1000                " keep 1000 lines of command line history
set incsearch
set makeef=error.err
set nocompatible                " Use Vim defaults (much better!)
set number
set ruler                       " show the cursor position all the time
set scrolloff=3
set expandtab                   " Tabs -> Spaces
set shiftwidth=4                " Indent/Unindent (>>/<<) indent 4 spaces
set tabstop=4                   " Tabs count as 4 spaces
set showcmd
set showmode
set smartindent
set t_Co=256
set title
set viminfo='20,\"50            " read/write a .viminfo file, don't store more " than 50 lines of registers
set wildmenu
set wildmode=list:longest

" Only do this part when compiled with support for autocommands
if has("autocmd")
  " When editing a file, always jump to the last cursor position
  autocmd BufReadPost *
  \ if line("'\"") > 0 && line ("'\"") <= line("$") |
  \   exe "normal! g'\"" |
  \ endif
endif

" Switch syntax highlighting on, when the terminal has colors
" Also switch on highlighting the last used search pattern.
syntax enable
colorscheme solarized
set background=dark

" Backup and swap directories
set backupdir=~/.vim-temp/backup,/tmp
set directory=~/.vim-temp/swap,/tmp

" Haskell Mode Configuration
au Bufenter *.hs compiler ghc
au Bufenter *.hs map <C-\> :GHCi 
let g:haddock_browser = "open"
let g:haddock_browser_callformat = "%s %s"

" Preserve indentation while pasting text from the OS X clipboard
noremap <leader>p :set paste<CR>:put  *<CR>:set nopaste<CR>

" Press Space to turn off highlighting and clear any message already
" displayed.
nnoremap <silent> <Space> :nohlsearch<Bar>:echo<CR>

" File type detection
filetype plugin on
filetype indent on

map <C-N> :tabprev<CR>
map <C-M> :tabnext<CR>

map <C-F> :NERDTreeToggle<CR>


set statusline=[%n]\ %f\ %m\ %r%=0x%B\ %l:%v\ 
